- set_fact:
    gcc_script: "https://gist.githubusercontent.com/neetjn/7c28db8a7a31766f0e329590e4de213f/raw/973d9712c9323319bb99519bc43b34a2d778daa4/gcc7.sh"

- name: Check if ssh key exists
  stat:
    path: "{{ssh_directory}}/id_rsa"
  register: git_ssh_key_exists

- name: Generate ssh key
  shell: |
    ssh-keygen -t rsa -C "{{git_ssh_key_user}}" -f "{{ssh_directory}}/id_rsa" -N ''
  become: False
  when: git_ssh_key_exists.stat.exists == False

- name: Install CMake
  apt:
    name: cmake
    state: present

- name: Install gcc 7
  shell: "curl {{gcc_script}} | sh"

- name: Increase file watchers
  lineinfile:
    dest: /etc/sysctl.conf
    line: 'fs.inotify.max_user_watches=524288'
    state: present

- name: Check watchman installed
  shell: which watchman
  register: watchman_check
  ignore_errors: True

- name: Install watchman
  shell: curl https://gist.githubusercontent.com/markis/705f101a549f958d62546fb966caae42/raw/609019ffbef8698899e1bf66515baeec32df6c4d/install-watchman-ubuntu.sh | sh
  when: watchman_check.rc == 1

- name: Add deadsnakes ppa for python utilities
  apt_repository:
    validate_certs: no
    repo: ppa:deadsnakes/ppa
    state: present

- name: Install pip python package manager
  apt:
    name: python-pip
    state: present

- name: Install pip for python 3
  apt:
    name: python3-pip
    state: present

- name: Upgrade pip and pip3
  shell: pip install --upgrade pip && pip3 install --upgrade pip

- name: Install Python development libs
  apt:
    name: python-dev
    state: present

- name: Install Python (3.6) development libs
  apt:
    name: python3.6-dev
    state: present

- name: Install Python 3.7
  apt:
    name: python3.7
    state: present

- name: Install Python (3.7) development libs
  apt:
    name: python3.7-dev
    state: present

- name: Install pylint cli and tools
  pip:
    name: pylint
    state: present

- name: Install pep8
  pip:
    name: pep8
    state: present

- name: Install flake8
  pip:
    name: flake8
    state: present

- name: Install httpie cli
  pip:
    name: httpie
    state: present

- name: Install AWS cli
  pip:
    name: awscli
    version: 1.11.130
    state: present

- name: Check Docker Installed
  shell: which docker
  register: docker_check
  ignore_errors: True

# will install the latest version of docker
- name: Install Docker
  shell: curl https://get.docker.com/ | sh
  when: docker_check.rc == 1

# https://github.com/ansible/ansible/issues/20492#issuecomment-274081101
- name: Install docker compose
  pip:
    name: docker-compose
    version: 1.9.0
    state: present

- name: Install npm
  apt:
    name: npm
    state: present

- name: Install n node.js version manager
  npm:
    name: n
    global: yes
    state: present

- name: Install node.js 10 stable
  shell: n latest

- name: Install coffee-script
  npm:
    name: coffee-script
    global: yes
    state: present

- name: Install webpack
  npm:
    name: webpack
    global: yes
    state: present

- name: Install firebase tools
  npm:
    name: firebase-tools
    global: yes
    state: present

- name: Install ruby
  apt:
    name: ruby
    state: present

- name: Install ruby development tools
  apt:
    name: ruby-dev
    state: present

- name: Install rails
  apt:
    name: rails
    state: present

- name: Install travis-cli
  gem:
    name: travis-cli
    state: present

- name: Install mycli
  pip:
    name: mycli
    state: present

- name: Install pgcli
  pip:
    name: pgcli
    state: present

- name: Install Go
  shell: snap install go --classic

- name: Add Dart Keys
  shell: |
    sh -c 'curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
    sh -c 'curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'

- name: Install Dart
  apt:
    name: dart
    state: present
    update_cache: yes

- name: Add php Keys
    shell: LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php

- name: Install php 7.1.*
  apt:
    name: php7.1
    state: present
    update_cache: yes

- name: Install php 7.1.* ext-zip (for laravel)
  apt:
    name: php7.1-zip
    state: present

- name: Install php 7.1.* mbstring (for laravel)
  apt:
    name: php7.1-mbstring
    state: present

- name: Install php 7.1.* ext-dom (for laravel)
  apt:
    name: php7.1-dom
    state: present

- name: Install composer
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

- name: Install datagrip
  shell: snap install datagrip --classic

- name: Install insomnia rest tool
  shell: snap install insomnia

- name: Install Code
  shell: snap install vscode --classic

- name: Install Code Extensions
  shell: |
    code --install-extension ms-python.python
    code --install-extension redhat.java
    code --install-extension EditorConfig.EditorConfig
    code --install-extension abusaidm.html-snippets
    code --install-extension arcticicestudio.nord-visual-studio-code
    code --install-extension christian-kohler.npm-intellisense
    code --install-extension christian-kohler.path-intellisense
    code --install-extension crisward.riot-tag
    code --install-extension dbaeumer.vscode-eslint
    code --install-extension dzannotti.vscode-babel-coloring
    code --install-extension eg2.vscode-npm-script
    code --install-extension PKief.material-icon-theme
    code --install-extension formulahendry.terminal
    code --install-extension hnw.vscode-auto-open-markdown-preview
    code --install-extension jasonnutter.search-node-modules
    code --install-extension liuji-jim.vue
    code --install-extension marcostazi.VS-code-vagrantfile
    code --install-extension octref.vetur
    code --install-extension waderyan.nodejs-extension-pack
    code --install-extension xabikos.JavaScriptSnippets
    code --install-extension zhuangtongfa.Material-theme
    code --install-extension dracula-theme.theme-dracula
    code --install-extension Equinusocio.vsc-material-theme
    code --install-extension alireza94.theme-gotham
    code --install-extension raashida.fixthecode-vs
    code --install-extension lextudio.restructuredtext
    code --install-extension loiane.ts-extension-pack
    code --install-extension eamodio.gitlens
    code --install-extension formulahendry.auto-close-tag
    code --install-extension wayou.vscode-todo-highlight
    code --install-extension yahya-gilany.vscode-pomodoro
    code --install-extensions primalmotion.primal
    code --install-extension ulthes.theme-firewatch
    code --install-extension monokai.theme-monokai-pro-vscode
    code --install-extension teabyii.ayu
    code --install-extension nonylene.dark-molokai-theme
    code --install-extension ms-vscode.theme-1337
    code --install-extension ryu1kn.text-marker
    code --install-extension webreflection.literally-html
    code --install-extesion alefragnani.bookmarks
    code --install-extension dart-code.dart-code
    code --install-extension sbrink.elm
    code --install-extension twxs.cmake
    code --install-extension vector-of-bool.cmake-tools
    code --install-extension slb235.vscode-coffeelint
    code --install-extension orta.vscode-jest
  become: False
  ignore_errors: True

- name: Add vim8 ppa
  apt_repository:
    validate_certs: no
    repo: ppa:jonathonf/vim
    state: present

- name: Install vim
  apt:
    name: vim
    state: present

- name: Install pathogen for vim
  shell: |
    mkdir -p ~/.vim/autoload ~/.vim/bundle
    curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

- name: Install apt-vim
  shell: |
    curl -sL https://raw.githubusercontent.com/egalpin/apt-vim/master/install.sh | sh
    chmod +x "{{home_directory}}/apt-vim/apt-vim"
    cat "{{home_directory}}/.bashrc" | grep apt-vim || echo "alias apt-vim='{{home_directory}}/apt-vim/apt-vim' >> {{home_directory}}/.bashrc"
    cat "{{home_directory}}/.zshrc" | grep apt-vim || echo "alias apt-vim='{{home_directory}}/apt-vim/apt-vim' >> {{home_directory}}/.zshrc"
  become: False

- name: Install vim plugins
  shell: |
    alias apt-vim="{{home_directory}}/apt-vim/apt-vim"
    apt-vim install -y https://github.com/scrooloose/nerdtree.git
    apt-vim install -y https://github.com/vim-python/python-syntax.git
    apt-vim install -y https://github.com/nvie/vim-flake8.git
    apt-vim install -y https://github.com/Valloric/YouCompleteMe.git
    apt-vim install -y https://github.com/ryym/vim-riot.git
    apt-vim install -y https://github.com/leafgarland/typescript-vim.git
    apt-vim install -y https://github.com/kchmck/vim-coffee-script.git
    apt-vim install -y https://github.com/mxw/vim-jsx.git
    apt-vim install -y https://github.com/pangloss/vim-javascript.git
    apt-vim install -y https://github.com/posva/vim-vue.git
    apt-vim install -y https://github.com/itchyny/vim-gitbranch.git
    apt-vim install -y https://github.com/tpope/vim-fugitive.git
    apt-vim install -y https://github.com/ctrlpvim/ctrlp.vim.git
    apt-vim install -y https://github.com/sgur/vim-editorconfig.git
  become: False

- name: Install editorconfig core
  apt:
    name: editorconfig
    state: present

- name: Install gvim
  apt:
    name: vim-gnome
    state: present

